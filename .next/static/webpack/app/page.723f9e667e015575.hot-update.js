"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/charts/LineChart.tsx":
/*!*********************************************!*\
  !*** ./app/components/charts/LineChart.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LineChart: function() { return /* binding */ LineChart; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dynamic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dynamic */ \"(app-pages-browser)/./node_modules/next/dist/api/app-dynamic.js\");\n/* harmony import */ var _barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=format!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/format.js\");\n/* __next_internal_client_entry_do_not_use__ LineChart auto */ \n\n\n\nconst Plot = (0,next_dynamic__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(()=>__webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_react-plotly_js_react-plotly_js\").then(__webpack_require__.bind(__webpack_require__, /*! react-plotly.js */ \"(app-pages-browser)/./node_modules/react-plotly.js/react-plotly.js\")), {\n    loadableGenerated: {\n        modules: [\n            \"app/components/charts/LineChart.tsx -> \" + \"react-plotly.js\"\n        ]\n    },\n    ssr: false\n});\n_c = Plot;\nconst LineChart = (param)=>{\n    let { data } = param;\n    // Organizar dados por dia\n    const dayGroups = data.timestamps.reduce((groups, timestamp, index)=>{\n        const day = timestamp.split(\"T\")[0];\n        if (!groups[day]) {\n            groups[day] = [];\n        }\n        groups[day].push(index);\n        return groups;\n    }, {});\n    const days = Object.keys(dayGroups).sort();\n    const colors = [\n        \"#2563eb\",\n        \"#16a34a\",\n        \"#ea580c\",\n        \"#9333ea\",\n        \"#0891b2\",\n        \"#db2777\"\n    ];\n    // Criar array de ticks para o eixo X (a cada 2 horas)\n    const tickVals = Array.from({\n        length: 13\n    }, (_, i)=>i * 120); // 0, 120, 240, ..., 1440\n    const tickText = Array.from({\n        length: 13\n    }, (_, i)=>\"\".concat((i * 2).toString().padStart(2, \"0\"), \":00\"));\n    const layout = {\n        title: \"Compara\\xe7\\xe3o de ISF Din\\xe2mica e ISF Perfil por Hor\\xe1rio (Sobreposi\\xe7\\xe3o de Dias)\",\n        xaxis: {\n            title: \"Hor\\xe1rio do Dia (Minutos)\",\n            tickmode: \"array\",\n            tickvals: tickVals,\n            ticktext: tickText,\n            showgrid: true,\n            gridcolor: \"rgba(0,0,0,0.1)\",\n            range: [\n                0,\n                1440\n            ],\n            zeroline: false\n        },\n        yaxis: {\n            title: \"ISF\",\n            showgrid: true,\n            gridcolor: \"rgba(0,0,0,0.1)\",\n            zeroline: false\n        },\n        showlegend: true,\n        legend: {\n            title: {\n                text: \"Legenda\"\n            },\n            x: 1.05,\n            y: 1,\n            xanchor: \"left\"\n        },\n        margin: {\n            t: 50,\n            r: 150,\n            l: 50,\n            b: 50\n        },\n        hovermode: \"x unified\",\n        plot_bgcolor: \"white\",\n        paper_bgcolor: \"white\",\n        font: {\n            family: \"Inter, sans-serif\",\n            size: 12\n        }\n    };\n    const config = {\n        responsive: true,\n        displayModeBar: true,\n        modeBarButtonsToRemove: [\n            \"lasso2d\",\n            \"select2d\"\n        ],\n        displaylogo: false\n    };\n    const getPlotData = ()=>{\n        // Dados do ISF dinâmico por dia\n        const dynamicLines = days.map((day, index)=>{\n            const dayData = dayGroups[day].map((i)=>({\n                    timestamp: data.timestamps[i],\n                    value: data.values1[i]\n                }));\n            // Converter timestamps para minutos do dia\n            const normalizedData = dayData.map((d)=>{\n                const date = new Date(d.timestamp);\n                return {\n                    x: date.getHours() * 60 + date.getMinutes(),\n                    y: d.value\n                };\n            });\n            // Ordenar por minutos para garantir a linha contínua\n            normalizedData.sort((a, b)=>a.x - b.x);\n            return {\n                x: normalizedData.map((d)=>d.x),\n                y: normalizedData.map((d)=>d.y),\n                type: \"scatter\",\n                mode: \"lines+markers\",\n                name: \"\".concat(data.series1Name, \" - \").concat((0,_barrel_optimize_names_format_date_fns__WEBPACK_IMPORTED_MODULE_3__.format)(new Date(day), \"dd/MM\")),\n                line: {\n                    color: colors[index % colors.length],\n                    width: 1.5\n                },\n                marker: {\n                    size: 3\n                },\n                hovertemplate: \"%{y:.1f}<extra>%{fullData.name}</extra>\"\n            };\n        });\n        // Linha do ISF do perfil (referência)\n        const profileLine = {\n            x: tickVals,\n            y: Array(tickVals.length).fill(data.values2[0]),\n            type: \"scatter\",\n            mode: \"lines\",\n            name: data.series2Name,\n            line: {\n                color: \"#dc2626\",\n                width: 2,\n                dash: \"dot\"\n            },\n            hovertemplate: \"%{y:.1f}<extra>%{fullData.name}</extra>\"\n        };\n        return [\n            ...dynamicLines,\n            profileLine\n        ];\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-[400px]\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Plot, {\n            data: getPlotData(),\n            layout: layout,\n            config: config,\n            className: \"w-full h-full\"\n        }, void 0, false, {\n            fileName: \"/Users/thiagomsoares/Projetos/DiabetechFree/app/components/charts/LineChart.tsx\",\n            lineNumber: 141,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/thiagomsoares/Projetos/DiabetechFree/app/components/charts/LineChart.tsx\",\n        lineNumber: 140,\n        columnNumber: 5\n    }, undefined);\n};\n_c1 = LineChart;\nvar _c, _c1;\n$RefreshReg$(_c, \"Plot\");\n$RefreshReg$(_c1, \"LineChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/charts/LineChart.tsx\n"));

/***/ })

});